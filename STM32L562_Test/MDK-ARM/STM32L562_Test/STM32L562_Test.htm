<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32L562_Test\STM32L562_Test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32L562_Test\STM32L562_Test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6120001: Last Updated: Mon Jun  3 13:49:39 2024
<BR><P>
<H3>Maximum Stack Usage =        664 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ST7789H2_FillRGBRect &rArr; ST7789H2_SetCursor &rArr; st7789h2_write_reg
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">SecureFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SecureFault_Handler</a><BR>
 <LI><a href="#[30]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[30]">ADC1_2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[66]">AES_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[81]">BSP_LCD_DrawBitmap</a> from bsp.o(.text.BSP_LCD_DrawBitmap) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[83]">BSP_LCD_DrawHLine</a> from bsp.o(.text.BSP_LCD_DrawHLine) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[84]">BSP_LCD_DrawVLine</a> from bsp.o(.text.BSP_LCD_DrawVLine) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[82]">BSP_LCD_FillRGBRect</a> from bsp.o(.text.BSP_LCD_FillRGBRect) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[85]">BSP_LCD_FillRect</a> from bsp.o(.text.BSP_LCD_FillRect) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[8b]">BSP_LCD_GetFormat</a> from bsp.o(.text.BSP_LCD_GetFormat) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[88]">BSP_LCD_GetXSize</a> from bsp.o(.text.BSP_LCD_GetXSize) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[89]">BSP_LCD_GetYSize</a> from bsp.o(.text.BSP_LCD_GetYSize) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[86]">BSP_LCD_ReadPixel</a> from bsp.o(.text.BSP_LCD_ReadPixel) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[8a]">BSP_LCD_SetActiveLayer</a> from bsp.o(.text.BSP_LCD_SetActiveLayer) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[87]">BSP_LCD_WritePixel</a> from bsp.o(.text.BSP_LCD_WritePixel) referenced 2 times from main.o(.text.SystemHardwareInit)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32l5xx_it.o(.text.BusFault_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[53]">COMP_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[55]">CRS_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[31]">DAC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[6f]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[70]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[71]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[72]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[28]">DMA1_Channel1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[29]">DMA1_Channel2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[2a]">DMA1_Channel3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[2b]">DMA1_Channel4_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[2c]">DMA1_Channel5_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[2d]">DMA1_Channel6_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[2e]">DMA1_Channel7_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[2f]">DMA1_Channel8_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[59]">DMA2_Channel1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[5a]">DMA2_Channel2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[5b]">DMA2_Channel3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[5c]">DMA2_Channel4_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[5d]">DMA2_Channel5_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[5e]">DMA2_Channel6_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[5f]">DMA2_Channel7_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[60]">DMA2_Channel8_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[26]">DMAMUX1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[27]">DMAMUX1_S_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from stm32l5xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[16]">EXTI0_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[20]">EXTI10_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[21]">EXTI11_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[22]">EXTI12_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[23]">EXTI13_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[24]">EXTI14_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[25]">EXTI15_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[17]">EXTI1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[18]">EXTI2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[19]">EXTI3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[1a]">EXTI4_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[1b]">EXTI5_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[1c]">EXTI6_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[1d]">EXTI7_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[1e]">EXTI8_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[1f]">EXTI9_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[32]">FDCAN1_IT0_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[33]">FDCAN1_IT1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[12]">FLASH_S_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[56]">FMC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[68]">FPU_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[13]">GTZC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[69]">HASH_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32l5xx_it.o(.text.HardFault_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[43]">I2C1_ER_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[42]">I2C1_EV_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[45]">I2C2_ER_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[44]">I2C2_EV_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[62]">I2C3_ER_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[61]">I2C3_EV_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[6d]">I2C4_ER_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[6e]">I2C4_EV_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[74]">ICACHE_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[79]">LCD_FMC_DeInit</a> from bsp.o(.text.LCD_FMC_DeInit) referenced 2 times from bsp.o(.text.ST7789H2_Probe)
 <LI><a href="#[7d]">LCD_FMC_GetTick</a> from bsp.o(.text.LCD_FMC_GetTick) referenced 2 times from bsp.o(.text.ST7789H2_Probe)
 <LI><a href="#[78]">LCD_FMC_Init</a> from bsp.o(.text.LCD_FMC_Init) referenced 2 times from bsp.o(.text.ST7789H2_Probe)
 <LI><a href="#[7a]">LCD_FMC_ReadReg16</a> from bsp.o(.text.LCD_FMC_ReadReg16) referenced 2 times from bsp.o(.text.ST7789H2_Probe)
 <LI><a href="#[7c]">LCD_FMC_Send</a> from bsp.o(.text.LCD_FMC_Send) referenced 2 times from bsp.o(.text.ST7789H2_Probe)
 <LI><a href="#[7b]">LCD_FMC_WriteReg16</a> from bsp.o(.text.LCD_FMC_WriteReg16) referenced 2 times from bsp.o(.text.ST7789H2_Probe)
 <LI><a href="#[4e]">LPTIM1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[4f]">LPTIM2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[6b]">LPTIM3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[4d]">LPUART1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32l5xx_it.o(.text.MemManage_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32l5xx_it.o(.text.NMI_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[57]">OCTOSPI1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[75]">OTFDEC1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[6a]">PKA_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[c]">PVD_PVM_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from stm32l5xx_it.o(.text.PendSV_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[14]">RCC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[15]">RCC_S_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[67]">RNG_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[e]">RTC_S_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[63]">SAI1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[64]">SAI2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[58]">SDMMC1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[46]">SPI1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[47]">SPI2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[6c]">SPI3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[8d]">ST7789H2_DeInit</a> from st7789h2.o(.text.ST7789H2_DeInit) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[90]">ST7789H2_DisplayOff</a> from st7789h2.o(.text.ST7789H2_DisplayOff) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[8f]">ST7789H2_DisplayOn</a> from st7789h2.o(.text.ST7789H2_DisplayOn) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[96]">ST7789H2_DrawBitmap</a> from st7789h2.o(.text.ST7789H2_DrawBitmap) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[98]">ST7789H2_DrawHLine</a> from st7789h2.o(.text.ST7789H2_DrawHLine) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[99]">ST7789H2_DrawVLine</a> from st7789h2.o(.text.ST7789H2_DrawVLine) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[97]">ST7789H2_FillRGBRect</a> from st7789h2.o(.text.ST7789H2_FillRGBRect) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[9a]">ST7789H2_FillRect</a> from st7789h2.o(.text.ST7789H2_FillRect) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[92]">ST7789H2_GetBrightness</a> from st7789h2.o(.text.ST7789H2_GetBrightness) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[94]">ST7789H2_GetOrientation</a> from st7789h2.o(.text.ST7789H2_GetOrientation) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[9b]">ST7789H2_GetPixel</a> from st7789h2.o(.text.ST7789H2_GetPixel) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[9d]">ST7789H2_GetXSize</a> from st7789h2.o(.text.ST7789H2_GetXSize) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[9e]">ST7789H2_GetYSize</a> from st7789h2.o(.text.ST7789H2_GetYSize) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[8c]">ST7789H2_Init</a> from st7789h2.o(.text.ST7789H2_Init) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[8e]">ST7789H2_ReadID</a> from st7789h2.o(.text.ST7789H2_ReadID) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[7e]">ST7789H2_ReadRegWrap</a> from st7789h2.o(.text.ST7789H2_ReadRegWrap) referenced 2 times from st7789h2.o(.text.ST7789H2_RegisterBusIO)
 <LI><a href="#[80]">ST7789H2_SendDataWrap</a> from st7789h2.o(.text.ST7789H2_SendDataWrap) referenced 2 times from st7789h2.o(.text.ST7789H2_RegisterBusIO)
 <LI><a href="#[91]">ST7789H2_SetBrightness</a> from st7789h2.o(.text.ST7789H2_SetBrightness) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[95]">ST7789H2_SetCursor</a> from st7789h2.o(.text.ST7789H2_SetCursor) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[93]">ST7789H2_SetOrientation</a> from st7789h2.o(.text.ST7789H2_SetOrientation) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[9c]">ST7789H2_SetPixel</a> from st7789h2.o(.text.ST7789H2_SetPixel) referenced from st7789h2.o(.data.ST7789H2_Driver)
 <LI><a href="#[7f]">ST7789H2_WriteRegWrap</a> from st7789h2.o(.text.ST7789H2_WriteRegWrap) referenced 2 times from st7789h2.o(.text.ST7789H2_RegisterBusIO)
 <LI><a href="#[7]">SVC_Handler</a> from stm32l5xx_it.o(.text.SVC_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[6]">SecureFault_Handler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from stm32l5xx_it.o(.text.SysTick_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[76]">SystemInit</a> from system_stm32l5xx.o(.text.SystemInit) referenced from startup_stm32l562xx.o(.text)
 <LI><a href="#[f]">TAMP_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[10]">TAMP_S_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[50]">TIM15_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[51]">TIM16_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[52]">TIM17_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[34]">TIM1_BRK_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[37]">TIM1_CC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[36]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[35]">TIM1_UP_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[38]">TIM2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[39]">TIM3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[3a]">TIM4_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[3b]">TIM5_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[3c]">TIM6_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[3d]">TIM7_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[3e]">TIM8_BRK_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[41]">TIM8_CC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[40]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[3f]">TIM8_UP_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[65]">TSC_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[4b]">UART4_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[4c]">UART5_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[73]">UCPD1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[48]">USART1_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[49]">USART2_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[4a]">USART3_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[54]">USB_FS_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32l5xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32l562xx.o(.text) referenced from startup_stm32l562xx.o(RESET)
 <LI><a href="#[77]">__main</a> from __main.o(!!!main) referenced from startup_stm32l562xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[77]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(.text)
</UL>
<P><STRONG><a name="[9f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a1]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[106]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[107]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a2]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[108]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[aa]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[a3]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[a5]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_argv_1 &rArr; __ARM_argv_veneer &rArr; __ARM_get_argv &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_argv_veneer
</UL>

<P><STRONG><a name="[109]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[10a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[10b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[10c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[10d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[10e]"></a>__rt_lib_init_heapregion_libspace_used</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[110]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[111]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[112]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[113]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[114]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[115]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[116]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[117]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[118]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[119]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[11a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[11b]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[11c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[af]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[11d]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[11e]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[11f]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[120]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[121]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[122]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[123]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[a0]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[124]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a7]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a9]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[125]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[ab]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Display_DemoDescription &rArr; UTIL_LCD_DisplayStringAt &rArr; UTIL_LCD_DisplayChar &rArr; DrawChar &rArr; UTIL_LCD_FillRGBRect
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[126]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b5]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ae]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[127]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[b0]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[a6]"></a>__ARM_argv_veneer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, argv_veneer.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __ARM_argv_veneer &rArr; __ARM_get_argv &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_get_argv
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_argv_1
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SecureFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMAMUX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMAMUX1_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GTZC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>HASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>ICACHE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OCTOSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>OTFDEC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>PKA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RCC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TAMP_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>UCPD1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USB_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_stm32l562xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f6]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
</UL>

<P><STRONG><a name="[128]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[ad]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[12e]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[12f]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[b1]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[b7]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[b8]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[130]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__argv_alloc</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _get_argv_nomalloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_get_argv
</UL>

<P><STRONG><a name="[132]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__ARM_get_argv</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, _get_argv_nomalloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __ARM_get_argv &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_command_string
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__argv_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_argv_veneer
</UL>

<P><STRONG><a name="[bb]"></a>_sys_command_string</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, sys_command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _sys_command_string
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_get_argv
</UL>

<P><STRONG><a name="[133]"></a>__use_no_heap_region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hrguard.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>__heap_region$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hrguard.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[ba]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_get_argv
</UL>

<P><STRONG><a name="[104]"></a>BSP_LCD_DisplayOn</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, bsp.o(.text.BSP_LCD_DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_LCD_DisplayOn
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[81]"></a>BSP_LCD_DrawBitmap</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, bsp.o(.text.BSP_LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[83]"></a>BSP_LCD_DrawHLine</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, bsp.o(.text.BSP_LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_LCD_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[84]"></a>BSP_LCD_DrawVLine</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, bsp.o(.text.BSP_LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_LCD_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[82]"></a>BSP_LCD_FillRGBRect</STRONG> (Thumb, 152 bytes, Stack size 80 bytes, bsp.o(.text.BSP_LCD_FillRGBRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_LCD_FillRGBRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[85]"></a>BSP_LCD_FillRect</STRONG> (Thumb, 152 bytes, Stack size 80 bytes, bsp.o(.text.BSP_LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_LCD_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[8b]"></a>BSP_LCD_GetFormat</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, bsp.o(.text.BSP_LCD_GetFormat))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BSP_LCD_GetFormat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[88]"></a>BSP_LCD_GetXSize</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, bsp.o(.text.BSP_LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP_LCD_GetXSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[89]"></a>BSP_LCD_GetYSize</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, bsp.o(.text.BSP_LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP_LCD_GetYSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[bd]"></a>BSP_LCD_Init</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, bsp.o(.text.BSP_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = BSP_LCD_Init &rArr; ST7789H2_Probe &rArr; ST7789H2_ReadID &rArr; st7789h2_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Probe
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_PowerUp
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[86]"></a>BSP_LCD_ReadPixel</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, bsp.o(.text.BSP_LCD_ReadPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_LCD_ReadPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[8a]"></a>BSP_LCD_SetActiveLayer</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, bsp.o(.text.BSP_LCD_SetActiveLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BSP_LCD_SetActiveLayer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[87]"></a>BSP_LCD_WritePixel</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, bsp.o(.text.BSP_LCD_WritePixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_LCD_WritePixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.SystemHardwareInit)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[f7]"></a>Error_Handler</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, main.o(.text.Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[e9]"></a>FMC_NORSRAM_DeInit</STRONG> (Thumb, 180 bytes, Stack size 36 bytes, stm32l5xx_ll_fmc.o(.text.FMC_NORSRAM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FMC_NORSRAM_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_DeInit
</UL>

<P><STRONG><a name="[ee]"></a>FMC_NORSRAM_Extended_Timing_Init</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, stm32l5xx_ll_fmc.o(.text.FMC_NORSRAM_Extended_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[ec]"></a>FMC_NORSRAM_Init</STRONG> (Thumb, 406 bytes, Stack size 40 bytes, stm32l5xx_ll_fmc.o(.text.FMC_NORSRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FMC_NORSRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[ed]"></a>FMC_NORSRAM_Timing_Init</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, stm32l5xx_ll_fmc.o(.text.FMC_NORSRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FMC_NORSRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[cd]"></a>HAL_Delay</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, stm32l5xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_PowerUp
</UL>

<P><STRONG><a name="[ca]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 536 bytes, Stack size 56 bytes, stm32l5xx_hal_gpio.o(.text.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspDeInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_MspDeInit
</UL>

<P><STRONG><a name="[cc]"></a>HAL_GPIO_Init</STRONG> (Thumb, 898 bytes, Stack size 52 bytes, stm32l5xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_PowerUp
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_MspInit
</UL>

<P><STRONG><a name="[f4]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 64 bytes, Stack size 28 bytes, stm32l5xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_PowerUp
</UL>

<P><STRONG><a name="[ce]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l5xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FMC_GetTick
</UL>

<P><STRONG><a name="[fe]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l5xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[d1]"></a>HAL_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32l5xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>HAL_InitTick</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, stm32l5xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d5]"></a>HAL_MspInit</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32l5xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d7]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, stm32l5xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[d2]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32l5xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_NVIC_SetPriorityGrouping &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[dc]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, stm32l5xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_PWREx_ControlVoltageScaling &rArr; HAL_PWREx_SMPS_GetEffectiveMode
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_SMPS_GetEffectiveMode
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[f3]"></a>HAL_PWREx_EnableVddIO2</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l5xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddIO2))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[f8]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l5xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[dd]"></a>HAL_PWREx_SMPS_GetEffectiveMode</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32l5xx_hal_pwr_ex.o(.text.HAL_PWREx_SMPS_GetEffectiveMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_PWREx_SMPS_GetEffectiveMode
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
</UL>

<P><STRONG><a name="[100]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l5xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[101]"></a>HAL_RCCEx_EnableMSIPLLMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l5xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableMSIPLLMode))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[de]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2064 bytes, Stack size 56 bytes, stm32l5xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
</UL>

<P><STRONG><a name="[e1]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 846 bytes, Stack size 40 bytes, stm32l5xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreqFromPLLSource
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[e4]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32l5xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[e3]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 402 bytes, Stack size 36 bytes, stm32l5xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[e5]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 3276 bytes, Stack size 64 bytes, stm32l5xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[e7]"></a>HAL_SRAM_DeInit</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32l5xx_hal_sram.o(.text.HAL_SRAM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_SRAM_DeInit &rArr; HAL_SRAM_MspDeInit &rArr; HAL_FMC_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspDeInit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NORSRAM_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FMC_DeInit
</UL>

<P><STRONG><a name="[f0]"></a>HAL_SRAM_GetState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32l5xx_hal_sram.o(.text.HAL_SRAM_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SRAM_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FMC_Init
</UL>

<P><STRONG><a name="[ea]"></a>HAL_SRAM_Init</STRONG> (Thumb, 182 bytes, Stack size 64 bytes, stm32l5xx_hal_sram.o(.text.HAL_SRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = HAL_SRAM_Init &rArr; HAL_SRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspInit
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NORSRAM_Timing_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NORSRAM_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_BANK1_Init
</UL>

<P><STRONG><a name="[e8]"></a>HAL_SRAM_MspDeInit</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fmc.o(.text.HAL_SRAM_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SRAM_MspDeInit &rArr; HAL_FMC_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_DeInit
</UL>

<P><STRONG><a name="[eb]"></a>HAL_SRAM_MspInit</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fmc.o(.text.HAL_SRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = HAL_SRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[d6]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32l5xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[f1]"></a>MX_FMC_BANK1_Init</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, bsp.o(.text.MX_FMC_BANK1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = MX_FMC_BANK1_Init &rArr; HAL_SRAM_Init &rArr; HAL_SRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FMC_Init
</UL>

<P><STRONG><a name="[f2]"></a>MX_GPIO_Init</STRONG> (Thumb, 636 bytes, Stack size 152 bytes, gpio.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>PeriphCommonClock_Config</STRONG> (Thumb, 80 bytes, Stack size 160 bytes, main.o(.text.PeriphCommonClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = PeriphCommonClock_Config &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>ST7789H2_DeInit</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, st7789h2.o(.text.ST7789H2_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ST7789H2_DeInit &rArr; ST7789H2_DisplayOff &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_send_data
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DisplayOff
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[90]"></a>ST7789H2_DisplayOff</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, st7789h2.o(.text.ST7789H2_DisplayOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ST7789H2_DisplayOff &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_send_data
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[8f]"></a>ST7789H2_DisplayOn</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, st7789h2.o(.text.ST7789H2_DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ST7789H2_DisplayOn &rArr; st7789h2_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_send_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[96]"></a>ST7789H2_DrawBitmap</STRONG> (Thumb, 914 bytes, Stack size 96 bytes, st7789h2.o(.text.ST7789H2_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ST7789H2_DrawBitmap &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[98]"></a>ST7789H2_DrawHLine</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, st7789h2.o(.text.ST7789H2_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ST7789H2_DrawHLine &rArr; ST7789H2_SetCursor &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[99]"></a>ST7789H2_DrawVLine</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, st7789h2.o(.text.ST7789H2_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ST7789H2_DrawVLine &rArr; ST7789H2_SetPixel &rArr; ST7789H2_SetCursor &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[97]"></a>ST7789H2_FillRGBRect</STRONG> (Thumb, 204 bytes, Stack size 560 bytes, st7789h2.o(.text.ST7789H2_FillRGBRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = ST7789H2_FillRGBRect &rArr; ST7789H2_SetCursor &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetCursor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[9a]"></a>ST7789H2_FillRect</STRONG> (Thumb, 118 bytes, Stack size 72 bytes, st7789h2.o(.text.ST7789H2_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = ST7789H2_FillRect &rArr; ST7789H2_DrawHLine &rArr; ST7789H2_SetCursor &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[92]"></a>ST7789H2_GetBrightness</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, st7789h2.o(.text.ST7789H2_GetBrightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ST7789H2_GetBrightness
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[94]"></a>ST7789H2_GetOrientation</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, st7789h2.o(.text.ST7789H2_GetOrientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ST7789H2_GetOrientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[9b]"></a>ST7789H2_GetPixel</STRONG> (Thumb, 132 bytes, Stack size 64 bytes, st7789h2.o(.text.ST7789H2_GetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ST7789H2_GetPixel &rArr; ST7789H2_SetCursor &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_read_reg
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetCursor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[9d]"></a>ST7789H2_GetXSize</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, st7789h2.o(.text.ST7789H2_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ST7789H2_GetXSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[9e]"></a>ST7789H2_GetYSize</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, st7789h2.o(.text.ST7789H2_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ST7789H2_GetYSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[8c]"></a>ST7789H2_Init</STRONG> (Thumb, 1294 bytes, Stack size 136 bytes, st7789h2.o(.text.ST7789H2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ST7789H2_Init &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_send_data
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[8e]"></a>ST7789H2_ReadID</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, st7789h2.o(.text.ST7789H2_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ST7789H2_ReadID &rArr; st7789h2_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[fd]"></a>ST7789H2_RegisterBusIO</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, st7789h2.o(.text.ST7789H2_RegisterBusIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ST7789H2_RegisterBusIO
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Probe
</UL>

<P><STRONG><a name="[91]"></a>ST7789H2_SetBrightness</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, st7789h2.o(.text.ST7789H2_SetBrightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ST7789H2_SetBrightness
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[95]"></a>ST7789H2_SetCursor</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, st7789h2.o(.text.ST7789H2_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ST7789H2_SetCursor &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetPixel
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_GetPixel
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_FillRGBRect
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[93]"></a>ST7789H2_SetOrientation</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, st7789h2.o(.text.ST7789H2_SetOrientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ST7789H2_SetOrientation &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[9c]"></a>ST7789H2_SetPixel</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, st7789h2.o(.text.ST7789H2_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ST7789H2_SetPixel &rArr; ST7789H2_SetCursor &rArr; st7789h2_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789h2_write_reg
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.data.ST7789H2_Driver)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l5xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[ff]"></a>SystemClock_Config</STRONG> (Thumb, 194 bytes, Stack size 104 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_EnableMSIPLLMode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, system_stm32l5xx.o(.text.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[76]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_stm32l5xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>UTIL_LCD_Clear</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, stm32_lcd.o(.text.UTIL_LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UTIL_LCD_Clear &rArr; UTIL_LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_DemoDescription
</UL>

<P><STRONG><a name="[105]"></a>UTIL_LCD_DisplayChar</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, stm32_lcd.o(.text.UTIL_LCD_DisplayChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = UTIL_LCD_DisplayChar &rArr; DrawChar &rArr; UTIL_LCD_FillRGBRect
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_DisplayStringAt
</UL>

<P><STRONG><a name="[c5]"></a>UTIL_LCD_DisplayStringAt</STRONG> (Thumb, 352 bytes, Stack size 72 bytes, stm32_lcd.o(.text.UTIL_LCD_DisplayStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = UTIL_LCD_DisplayStringAt &rArr; UTIL_LCD_DisplayChar &rArr; DrawChar &rArr; UTIL_LCD_FillRGBRect
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_DemoDescription
</UL>

<P><STRONG><a name="[c8]"></a>UTIL_LCD_FillRGBRect</STRONG> (Thumb, 106 bytes, Stack size 88 bytes, stm32_lcd.o(.text.UTIL_LCD_FillRGBRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UTIL_LCD_FillRGBRect
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar
</UL>

<P><STRONG><a name="[c6]"></a>UTIL_LCD_FillRect</STRONG> (Thumb, 202 bytes, Stack size 80 bytes, stm32_lcd.o(.text.UTIL_LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UTIL_LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_Clear
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_DemoDescription
</UL>

<P><STRONG><a name="[c4]"></a>UTIL_LCD_SetBackColor</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32_lcd.o(.text.UTIL_LCD_SetBackColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UTIL_LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_DemoDescription
</UL>

<P><STRONG><a name="[c1]"></a>UTIL_LCD_SetFont</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32_lcd.o(.text.UTIL_LCD_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UTIL_LCD_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_DemoDescription
</UL>

<P><STRONG><a name="[103]"></a>UTIL_LCD_SetFuncDriver</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, stm32_lcd.o(.text.UTIL_LCD_SetFuncDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UTIL_LCD_SetFuncDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[c3]"></a>UTIL_LCD_SetTextColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32_lcd.o(.text.UTIL_LCD_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UTIL_LCD_SetTextColor
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_DemoDescription
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l5xx_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l562xx.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>main</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = main &rArr; Display_DemoDescription &rArr; UTIL_LCD_DisplayStringAt &rArr; UTIL_LCD_DisplayChar &rArr; DrawChar &rArr; UTIL_LCD_FillRGBRect
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_DemoDescription
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[fc]"></a>st7789h2_read_reg</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, st7789h2_reg.o(.text.st7789h2_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = st7789h2_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_ReadID
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_GetPixel
</UL>

<P><STRONG><a name="[f9]"></a>st7789h2_send_data</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, st7789h2_reg.o(.text.st7789h2_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = st7789h2_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DisplayOn
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DisplayOff
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DeInit
</UL>

<P><STRONG><a name="[fb]"></a>st7789h2_write_reg</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, st7789h2_reg.o(.text.st7789h2_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = st7789h2_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetPixel
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetOrientation
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_SetCursor
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_FillRGBRect
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DrawHLine
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DrawBitmap
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DisplayOff
</UL>

<P><STRONG><a name="[a4]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[135]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[136]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c0]"></a>Display_DemoDescription</STRONG> (Thumb, 230 bytes, Stack size 96 bytes, main.o(.text.Display_DemoDescription))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = Display_DemoDescription &rArr; UTIL_LCD_DisplayStringAt &rArr; UTIL_LCD_DisplayChar &rArr; DrawChar &rArr; UTIL_LCD_FillRGBRect
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_SetTextColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_SetFont
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_SetBackColor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_FillRect
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_DisplayStringAt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[102]"></a>SystemHardwareInit</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, main.o(.text.SystemHardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SystemHardwareInit &rArr; BSP_LCD_Init &rArr; ST7789H2_Probe &rArr; ST7789H2_ReadID &rArr; st7789h2_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_SetFuncDriver
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_Clear
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DisplayOn
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>HAL_FMC_MspDeInit</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, fmc.o(.text.HAL_FMC_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_FMC_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspDeInit
</UL>

<P><STRONG><a name="[d0]"></a>HAL_FMC_MspInit</STRONG> (Thumb, 208 bytes, Stack size 56 bytes, fmc.o(.text.HAL_FMC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspInit
</UL>

<P><STRONG><a name="[e2]"></a>RCC_GetSysClockFreqFromPLLSource</STRONG> (Thumb, 244 bytes, Stack size 28 bytes, stm32l5xx_hal_rcc.o(.text.RCC_GetSysClockFreqFromPLLSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetSysClockFreqFromPLLSource
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[e6]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, stm32l5xx_hal_rcc.o(.text.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[df]"></a>RCCEx_PLLSAI1_Config</STRONG> (Thumb, 610 bytes, Stack size 40 bytes, stm32l5xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[e0]"></a>RCCEx_PLLSAI2_Config</STRONG> (Thumb, 456 bytes, Stack size 40 bytes, stm32l5xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[d9]"></a>NVIC_EncodePriority</STRONG> (Thumb, 128 bytes, Stack size 52 bytes, stm32l5xx_hal_cortex.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[ef]"></a>SysTick_Config</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, stm32l5xx_hal_cortex.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[d8]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l5xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[da]"></a>__NVIC_SetPriority</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32l5xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[db]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32l5xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>

<P><STRONG><a name="[c7]"></a>DrawChar</STRONG> (Thumb, 526 bytes, Stack size 216 bytes, stm32_lcd.o(.text.DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = DrawChar &rArr; UTIL_LCD_FillRGBRect
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_FillRGBRect
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTIL_LCD_DisplayChar
</UL>

<P><STRONG><a name="[fa]"></a>ST7789H2_Delay</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, st7789h2.o(.text.ST7789H2_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ST7789H2_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DisplayOff
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_DeInit
</UL>

<P><STRONG><a name="[7e]"></a>ST7789H2_ReadRegWrap</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, st7789h2.o(.text.ST7789H2_ReadRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ST7789H2_ReadRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.text.ST7789H2_RegisterBusIO)
</UL>
<P><STRONG><a name="[80]"></a>ST7789H2_SendDataWrap</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, st7789h2.o(.text.ST7789H2_SendDataWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ST7789H2_SendDataWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.text.ST7789H2_RegisterBusIO)
</UL>
<P><STRONG><a name="[7f]"></a>ST7789H2_WriteRegWrap</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, st7789h2.o(.text.ST7789H2_WriteRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ST7789H2_WriteRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> st7789h2.o(.text.ST7789H2_RegisterBusIO)
</UL>
<P><STRONG><a name="[c9]"></a>FMC_MspDeInit</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, bsp.o(.text.FMC_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = FMC_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FMC_DeInit
</UL>

<P><STRONG><a name="[cb]"></a>FMC_MspInit</STRONG> (Thumb, 254 bytes, Stack size 80 bytes, bsp.o(.text.FMC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FMC_Init
</UL>

<P><STRONG><a name="[79]"></a>LCD_FMC_DeInit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp.o(.text.LCD_FMC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_FMC_DeInit &rArr; HAL_SRAM_DeInit &rArr; HAL_SRAM_MspDeInit &rArr; HAL_FMC_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_DeInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_MspDeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text.ST7789H2_Probe)
</UL>
<P><STRONG><a name="[7d]"></a>LCD_FMC_GetTick</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, bsp.o(.text.LCD_FMC_GetTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FMC_GetTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text.ST7789H2_Probe)
</UL>
<P><STRONG><a name="[78]"></a>LCD_FMC_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bsp.o(.text.LCD_FMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = LCD_FMC_Init &rArr; MX_FMC_BANK1_Init &rArr; HAL_SRAM_Init &rArr; HAL_SRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_GetState
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_BANK1_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_MspInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text.ST7789H2_Probe)
</UL>
<P><STRONG><a name="[7a]"></a>LCD_FMC_ReadReg16</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, bsp.o(.text.LCD_FMC_ReadReg16))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_FMC_ReadReg16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text.ST7789H2_Probe)
</UL>
<P><STRONG><a name="[7c]"></a>LCD_FMC_Send</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bsp.o(.text.LCD_FMC_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_FMC_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text.ST7789H2_Probe)
</UL>
<P><STRONG><a name="[7b]"></a>LCD_FMC_WriteReg16</STRONG> (Thumb, 138 bytes, Stack size 52 bytes, bsp.o(.text.LCD_FMC_WriteReg16))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_FMC_WriteReg16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text.ST7789H2_Probe)
</UL>
<P><STRONG><a name="[be]"></a>ST7789H2_PowerUp</STRONG> (Thumb, 280 bytes, Stack size 96 bytes, bsp.o(.text.ST7789H2_PowerUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ST7789H2_PowerUp &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[bf]"></a>ST7789H2_Probe</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, bsp.o(.text.ST7789H2_Probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ST7789H2_Probe &rArr; ST7789H2_ReadID &rArr; st7789h2_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_RegisterBusIO
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789H2_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
